#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Thu Dec 27 22:46:44 2012

import wx

# begin wxGlade: extracode
# end wxGlade




class DeployTab(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: DeployTab.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.deploy_button = wx.Button(self, -1, "DEPLOY")
        self.download_button = wx.Button(self, -1, "Download Code\n(will overwrite current code)")
        self.internet_button = wx.Button(self, -1, "Restore Internet")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.deploy_code, self.deploy_button)
        self.Bind(wx.EVT_BUTTON, self.download_code, self.download_button)
        self.Bind(wx.EVT_BUTTON, self.restore_internet, self.internet_button)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DeployTab.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DeployTab.__do_layout
        deploy_sizer = wx.BoxSizer(wx.VERTICAL)
        deploy_sizer.Add(self.deploy_button, 2, wx.EXPAND, 0)
        deploy_sizer.Add(self.download_button, 1, wx.EXPAND, 0)
        deploy_sizer.Add(self.internet_button, 1, wx.EXPAND, 0)
        self.SetSizer(deploy_sizer)
        deploy_sizer.Fit(self)
        # end wxGlade

    def deploy_code(self, event):  # wxGlade: DeployTab.<event_handler>
        print "Event handler `deploy_code' not implemented"
        event.Skip()

    def download_code(self, event):  # wxGlade: DeployTab.<event_handler>
        print "Event handler `download_code' not implemented"
        event.Skip()

    def restore_internet(self, event):  # wxGlade: DeployTab.<event_handler>
        print "Event handler `restore_internet' not implemented"
        event.Skip()

# end of class DeployTab

class OptionsPane(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: OptionsPane.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.team_number_static = wx.StaticText(self, -1, "Team Number")
        self.team_number_text = wx.TextCtrl(self, -1, "")
        self.source_static = wx.StaticText(self, -1, "Source code url")
        self.source_text = wx.TextCtrl(self, -1, "")
        self.install_dir_static = wx.StaticText(self, -1, "WindRiver Install Dir")
        self.install_dir_text = wx.TextCtrl(self, -1, "")
        self.wireless_adapter_static = wx.StaticText(self, -1, "Wireless Adapter")
        self.wireless_adapter_choice = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN)
        self.ethernet_adapter_static = wx.StaticText(self, -1, "Ethernet Adapter")
        self.ethernet_adapter_combo = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN | wx.CB_DROPDOWN)
        self.robot_network_static = wx.StaticText(self, -1, "Robot network name")
        self.robot_network_text = wx.TextCtrl(self, -1, "")
        self.button_3 = wx.Button(self, -1, "button_3")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: OptionsPane.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: OptionsPane.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 0, 0)
        grid_sizer_1.Add(self.team_number_static, 0, 0, 0)
        grid_sizer_1.Add(self.team_number_text, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.source_static, 0, 0, 0)
        grid_sizer_1.Add(self.source_text, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.install_dir_static, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.install_dir_text, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.wireless_adapter_static, 0, 0, 0)
        grid_sizer_1.Add(self.wireless_adapter_choice, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.ethernet_adapter_static, 0, 0, 0)
        grid_sizer_1.Add(self.ethernet_adapter_combo, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.robot_network_static, 0, 0, 0)
        grid_sizer_1.Add(self.robot_network_text, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_RIGHT, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        grid_sizer_1.AddGrowableCol(1)
        # end wxGlade

# end of class OptionsPane
class MainNotebook(wx.Notebook):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainNotebook.__init__
        kwds["style"] = 0
        wx.Notebook.__init__(self, *args, **kwds)
        self.DeployTab = DeployTab(self, -1)
        self.OptionsPane = OptionsPane(self, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainNotebook.__set_properties
        self.AddPage(self.DeployTab, "Go!")
        self.AddPage(self.OptionsPane, "Options")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainNotebook.__do_layout
        pass
        # end wxGlade

# end of class MainNotebook
class MainWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainWindow.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.MainNotebook = MainNotebook(self, -1)
        
        # Menu Bar
        self.menu = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Quit", "", wx.ITEM_NORMAL)
        self.menu.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "About", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Help", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "item", "", wx.ITEM_NORMAL)
        self.menu.Append(wxglade_tmp_menu, "Help")
        self.SetMenuBar(self.menu)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainWindow.__set_properties
        self.SetTitle("One Click Deploy")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainWindow.__do_layout
        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer.Add(self.MainNotebook, 1, wx.EXPAND, 0)
        self.SetSizer(sizer)
        sizer.Fit(self)
        self.Layout()
        # end wxGlade

# end of class MainWindow
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    MainWindow = MainWindow(None, -1, "")
    app.SetTopWindow(MainWindow)
    MainWindow.Show()
    app.MainLoop()
